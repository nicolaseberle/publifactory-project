version: "3.3"
services:
  whale:
    image: docker/whalesay
    command: ["cowsay", "Containers are deployed !"]

  api:
    restart: always
    build:
      context: ./
      dockerfile: server.dockerfile
    volumes:
      - ./:/src/app
      - /src/app/node_modules
    ports:
      - "4000:4000"
    links:
      - mongo
    depends_on:
      - mongo
    environment:
      WAIT_HOSTS: mongo:27017
      NODE_ENV: production
      BASE_MONGO: mongo
      ROOT_APP: "https://app.publifactory.co"
      DOCKER: "true"
    networks:
      - backend
      - frontend

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - backend
    depends_on:
      - whale

  client_dev:
    restart: always
    ports:
      - "9001:9001"
    build:
      context: ./
      dockerfile: client.dev.dockerfile
    volumes:
      - ./:/src/app/
      - /src/app/node_modules
    environment:
      - PORT=9001
      - NODE_ENV=production
      - BASE_API=api
      - SITE_IP="35.246.243.12"
    depends_on:
      - api
    links:
      - api
    networks:
      - frontend

  nginx:
    image: nginx
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    build:
      context: ./
      dockerfile: nginx.dockerfile
    volumes:
      - ./:/src/app
      - /src/app/node_modules
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - mongo
    links:
      - api
    environment:
      - NGINX_PORT=80
    networks:
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  backend:
  frontend:
